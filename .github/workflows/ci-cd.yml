name: CI/CD Pipeline with Docker

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # Test job - runs on every push and pull request
  test:
    name: Test Application
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm install
      
    - name: Run tests
      run: npm test
      
    - name: Verify application starts
      run: |
        npm start &
        sleep 5
        curl -f http://localhost:8080/health || exit 1
      
  # Docker build job - runs only on push to main
  docker-build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Build Docker image
      run: |
        docker build -t devops-mini-app:latest .
        echo "Docker image built successfully!"
        
    - name: Test Docker image
      run: |
        docker run -d --name test-app -p 8080:8080 devops-mini-app:latest
        sleep 5
        docker ps
        curl -f http://localhost:8080/health || exit 1
        docker stop test-app
        docker rm test-app
        
    - name: Save Docker image
      run: |
        mkdir -p dist
        docker save devops-mini-app:latest -o dist/devops-mini-app.tar
        echo "Docker image saved as artifact!"
        
    - name: Upload Docker image artifact
      uses: actions/upload-artifact@v4
      with:
        name: docker-image
        path: dist/
        
  # Deploy simulation with Docker
  deploy-simulation:
    name: Simulate Deployment with Docker
    runs-on: ubuntu-latest
    needs: docker-build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Download Docker image artifact
      uses: actions/download-artifact@v4
      with:
        name: docker-image
        path: ./artifacts
        
    - name: Load Docker image
      run: docker load -i ./artifacts/devops-mini-app.tar
      
    - name: Run container
      run: |
        docker run -d --name devops-app -p 8080:8080 devops-mini-app:latest
        sleep 5
        
    - name: Verify deployment
      run: |
        echo "Testing deployed application..."
        curl -f http://localhost:8080/health || exit 1
        echo "Docker deployment simulation successful!"
        
    - name: Show deployment summary
      run: |
        echo "ï¿½ Application containerized and deployed successfully!"
        echo "Image: devops-mini-app:latest"
        echo "Port: 8080"
        echo "Build completed at: $(date)"
        echo "This is a simulation. In a real environment, this would deploy to a server."
        
    - name: Cleanup
      run: |
        docker stop devops-app || true
        docker rm devops-app || true
name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # Test job - runs on every push and pull request
  test:
    name: Test Application
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm install
      
    - name: Run tests
      run: npm test
      
    - name: Verify application starts
      run: |
        npm start &
        sleep 5
        curl -f http://localhost:8080/health || exit 1
      
  # Build job - runs only on push to main (after test passes)
  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'
        
    - name: Install dependencies
      run: npm install
      
    - name: Build package
      run: |
        mkdir -p dist
        tar -czf dist/app.tar.gz app.js package.json package-lock.json
        echo "Application built successfully!"
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: app-build
        path: dist/
        
  # Deploy simulation job - shows what deployment would look like
  deploy-simulation:
    name: Simulate Deployment
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: app-build
        
    - name: Extract application
      run: tar -xzf dist/app.tar.gz -C .
      
    - name: Install dependencies
      run: npm install --only=production
      
    - name: Start application
      run: |
        npm start &
        sleep 5
        
    - name: Verify deployment
      run: |
        echo "Testing deployed application..."
        curl -f http://localhost:8080/health || exit 1
        echo "Deployment simulation successful!"
        
    - name: Show deployment summary
      run: |
        echo "ðŸš€ Application deployed successfully!"
        echo "Version: 1.0.0"
        echo "Build completed at: $(date)"
        echo "This is a simulation. In a real environment, this would deploy to a server."